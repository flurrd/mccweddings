{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.afa553a5a656526024cb.hot-update.js","sources":["webpack:///./components/ContentBlock.js"],"sourcesContent":["import Link from \"next/link\";\nimport { motion, AnimatePresence, useViewportScroll, useTransform } from 'framer-motion';\n\nimport React, { useRef, useState } from \"react\";\nimport { useIntersectionObserver } from \"./hook\";\n\n\nexport default function ContentBlock(props) {\n\n  const root = useRef();\n  const target = useRef();\n  const rootMargin = \"40px\"\n\n  const [isThingIntersecting, setThingIntersecting] = useState();\n\n\n  // Here's our hook! Let's give it some configuration...\n  useIntersectionObserver({\n    root,\n    target,\n    rootMargin,\n\n    // What do we do when it intersects?\n    // The signature of this callback is (collectionOfIntersections, observerElement).\n    onIntersect: ([{ isIntersecting }]) => setThingIntersecting(isIntersecting)\n  });\n\n\n\n  return (\n    <div className=\"content-block\">\n    \n      <div  ref={target}>\n        {isThingIntersecting && <motion.h2\n        initial={{opacity: 0, x: \"100%\", rotateX: 90, height: \"3rem\"}}\n        animate={{opacity: 1, x:0, rotateX: 0, height: \"3rem\"}}\n        transition={{ duration: 0.25}}\n        whileHover={{ rotateX: 180, duration: 0.3 }}\n        whileTap={{ rotateX: 180, duration: 0.3 }}>\n        {props.title}</motion.h2>}\n\n</div>\n\n\n      <style jsx>\n        {`\n\n          .content-block{\n      \n            display: flex; \n            justify-content: center;\n            align-items: center;\n            min-height: 70vh;\n            background: white;\n          }\n        `}\n      </style>\n\n    </div>\n  );\n\n\n\n}\n\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AALA;AAAA;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAPA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAiCA;;;;A","sourceRoot":""}